;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 4/4/2022
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;const unsigned char image_code[70]=
;{
;	0x00,	//	0001		. . . . . . . .
;	0x00,	//	0002		. . . . . . . .
;	0x00,	//	0003		. . . . . . . .
;	0x00,	//	0004		. . . . . . . .
;	0x00,	//	0005		. . . . . . . .
;	0x00,	//	0006		. . . . . . . .
;	0x00,	//	0007		. . . . . . . .
;	0x00,	//	0008		. . . . . . . .
;	0x00,	//	0009		. . . . . . . .
;	0x00,	//	000A		. . . . . . . .
;	0x00,	//	000B		. . . . . . . .
;	0x00,	//	000C		. . . . . . . .
;	0x00,	//	000D		. . . . . . . .
;	0x00,	//	000E		. . . . . . . .
;	0x00,	//	000F		. . . . . . . .
;	0x7F,	//	0010		. # # # # # # #
;	0x09,	//	0011		. . . . # . . #
;	0x09,	//	0012		. . . . # . . #
;	0x09,	//	0013		. . . . # . . #
;	0x01,	//	0014		. . . . . . . #
;	0x00,	//	0015		. . . . . . . .
;	0x00,	//	0016		. . . . . . . .
;	0x7F,	//	0017		. # # # # # # #
;	0x49,	//	0018		. # . . # . . #
;	0x49,	//	0019		. # . . # . . #
;	0x49,	//	001A		. # . . # . . #
;	0x41,	//	001B		. # . . . . . #
;	0x00,	//	001C		. . . . . . . .
;	0x00,	//	001D		. . . . . . . .
;	0x7F,	//	001E		. # # # # # # #
;	0x41,	//	001F		. # . . . . . #
;	0x41,	//	0020		. # . . . . . #
;	0x41,	//	0021		. # . . . . . #
;	0x3E,	//	0022		. . # # # # # .
;	0x00,	//	0023		. . . . . . . .
;	0x00,	//	0024		. . . . . . . .
;	0x3E,	//	0025		. . # # # # # .
;	0x41,	//	0026		. # . . . . . #
;	0x41,	//	0027		. # . . . . . #
;	0x41,	//	0028		. # . . . . . #
;	0x22,	//	0029		. . # . . . # .
;	0x00,	//	002A		. . . . . . . .
;	0x00,	//	002B		. . . . . . . .
;	0x7F,	//	002C		. # # # # # # #
;	0x49,	//	002D		. # . . # . . #
;	0x49,	//	002E		. # . . # . . #
;	0x49,	//	002F		. # . . # . . #
;	0x36,	//	0030		. . # # . # # .
;	0x00,	//	0031		. . . . . . . .
;	0x00,	//	0032		. . . . . . . .
;	0x7C,	//	0033		. # # # # # . .
;	0x12,	//	0034		. . . # . . # .
;	0x11,	//	0035		. . . # . . . #
;	0x12,	//	0036		. . . # . . # .
;	0x7C,	//	0037		. # # # # # . .
;	0x00,	//	0038		. . . . . . . .
;	0x00,	//	0039		. . . . . . . .
;	0x00,	//	003A		. . . . . . . .
;	0x00,	//	003B		. . . . . . . .
;	0x00,	//	003C		. . . . . . . .
;	0x00,	//	003D		. . . . . . . .
;	0x00,	//	003E		. . . . . . . .
;	0x00,	//	003F		. . . . . . . .
;	0x00,	//	0040		. . . . . . . .
;	0x00,	//	0041		. . . . . . . .
;	0x00,	//	0042		. . . . . . . .
;	0x00,	//	0043		. . . . . . . .
;	0x00,	//	0044		. . . . . . . .
;	0x00,	//	0045		. . . . . . . .
;	0x00 	//	0046		. . . . . . . .
;};
;
;char PORT[16] = {1,2,4,8,16,32,64,128, 0, 0, 0, 0, 0, 0, 0, 0};

	.DSEG
;int c, t, i;
;
;void main(void)
; 0000 0069 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 006A     // PortB as output
; 0000 006B     PORTB=0x00;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 006C     DDRB=0xFF;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 006D 
; 0000 006E     // PortC as output
; 0000 006F     PORTC=0x00;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0070     DDRC=0xFF;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0071 
; 0000 0072     // PortD as output
; 0000 0073     PORTD=0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0074     DDRD=0xFF;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0075 
; 0000 0076     // Settings
; 0000 0077     TCCR0=0x00;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0078     TCNT0=0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0079     OCR0=0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 007A 
; 0000 007B     TCCR1A=0x00;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 007C     TCCR1B=0x00;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 007D     TCNT1H=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 007E     TCNT1L=0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 007F     ICR1H=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0080     ICR1L=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0081     OCR1AH=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0082     OCR1AL=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0083     OCR1BH=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0084     OCR1BL=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0085 
; 0000 0086     ASSR=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0087     TCCR2=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0088     TCNT2=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0089     OCR2=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 008A 
; 0000 008B     TIMSK=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 008C 
; 0000 008D     while (1) {
;PCODE: $0000003E VOL: 0
; 0000 008E         for(i = 0; i < 55; ++i) {
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 008F             for(t = 0; t < 15; ++t) {
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0090                 for (c = 0; c < 8; ++c) {
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0091                     PORTD = PORT[c];
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0092                     PORTC = ~image_code[54 - i + c];
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0093                     delay_ms(1);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0094                 }
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0095                 PORTD = 0;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0096                 for (c = 0; c < 8; ++c) {
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0097                     PORTB = PORT[c];
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0098                     PORTC = ~image_code[54 - i + c + 8];
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0099                     delay_ms(1);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 009A                 }
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 009B                 PORTB = 0;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 009C             }
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 009D         }
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 009E     };
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 009F }
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
